{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ideapad GAMING\\\\Desktop\\\\SDGP(Project)\\\\src\\\\views\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = ['places']; // Required for geolocation\n\nconst MapComponent = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const success = position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setCurrentLocation({\n        lat: latitude,\n        lng: longitude\n      });\n    };\n    const handleError = err => {\n      setError(err.message);\n    };\n    navigator.geolocation.getCurrentPosition(success, handleError);\n  }, []);\n  const handleLoad = mapInstance => {\n    setMap(mapInstance);\n  };\n  const center = currentLocation || {\n    lat: 37.7749,\n    lng: -122.4194\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"\" // Replace with your API key\n    ,\n    libraries: libraries,\n    onError: err => setError(err),\n    children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error loading Google Maps: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: {\n        width: '100vw',\n        height: '400px'\n      },\n      zoom: currentLocation ? 14 : 10 // Adjust zoom level\n      ,\n      center: center,\n      onLoad: handleLoad,\n      children: currentLocation && /*#__PURE__*/_jsxDEV(Marker, {\n        position: currentLocation\n      }, \"userLocationMarker\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(MapComponent, \"x//NL+lYjqRvrApCYIifjR9TR6Y=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","libraries","MapComponent","_s","map","setMap","currentLocation","setCurrentLocation","error","setError","success","position","latitude","longitude","coords","lat","lng","handleError","err","message","navigator","geolocation","getCurrentPosition","handleLoad","mapInstance","center","googleMapsApiKey","onError","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","width","height","zoom","onLoad","_c","$RefreshReg$"],"sources":["C:/Users/ideapad GAMING/Desktop/SDGP(Project)/src/views/MapComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\n\r\nconst libraries = ['places']; // Required for geolocation\r\n\r\nconst MapComponent = () => {\r\n    const [map, setMap] = useState(null);\r\n    const [currentLocation, setCurrentLocation] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const success = (position) => {\r\n            const { latitude, longitude } = position.coords;\r\n            setCurrentLocation({ lat: latitude, lng: longitude });\r\n        };\r\n\r\n        const handleError = (err) => {\r\n            setError(err.message);\r\n        };\r\n\r\n        navigator.geolocation.getCurrentPosition(success, handleError);\r\n    }, []);\r\n\r\n    const handleLoad = (mapInstance) => {\r\n        setMap(mapInstance);\r\n    };\r\n\r\n    const center = currentLocation || { lat: 37.7749, lng: -122.4194 }; \r\n\r\n    return (\r\n        <LoadScript\r\n            googleMapsApiKey=\"\" // Replace with your API key\r\n            libraries={libraries}\r\n            onError={(err) => setError(err)}\r\n        >\r\n            {error ? (\r\n                <div>Error loading Google Maps: {error}</div>\r\n            ) : (\r\n                <GoogleMap\r\n                    mapContainerStyle={{ width: '100vw', height: '400px' }}\r\n                    zoom={currentLocation ? 14 : 10} // Adjust zoom level\r\n                    center={center}\r\n                    onLoad={handleLoad}\r\n                >\r\n                    {currentLocation && (\r\n                        <Marker\r\n                            key=\"userLocationMarker\"\r\n                            position={currentLocation} \r\n                        />\r\n                    )}\r\n                </GoogleMap>\r\n            )}\r\n        </LoadScript>\r\n    );\r\n};\r\n\r\nexport default MapComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,SAAS,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;;AAE9B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMe,OAAO,GAAIC,QAAQ,IAAK;MAC1B,MAAM;QAAEC,QAAQ;QAAEC;MAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;MAC/CP,kBAAkB,CAAC;QAAEQ,GAAG,EAAEH,QAAQ;QAAEI,GAAG,EAAEH;MAAU,CAAC,CAAC;IACzD,CAAC;IAED,MAAMI,WAAW,GAAIC,GAAG,IAAK;MACzBT,QAAQ,CAACS,GAAG,CAACC,OAAO,CAAC;IACzB,CAAC;IAEDC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACZ,OAAO,EAAEO,WAAW,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,UAAU,GAAIC,WAAW,IAAK;IAChCnB,MAAM,CAACmB,WAAW,CAAC;EACvB,CAAC;EAED,MAAMC,MAAM,GAAGnB,eAAe,IAAI;IAAES,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE,CAAC;EAAS,CAAC;EAElE,oBACIhB,OAAA,CAACH,UAAU;IACP6B,gBAAgB,EAAC,EAAE,CAAC;IAAA;IACpBzB,SAAS,EAAEA,SAAU;IACrB0B,OAAO,EAAGT,GAAG,IAAKT,QAAQ,CAACS,GAAG,CAAE;IAAAU,QAAA,EAE/BpB,KAAK,gBACFR,OAAA;MAAA4B,QAAA,GAAK,6BAA2B,EAACpB,KAAK;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAE7ChC,OAAA,CAACJ,SAAS;MACNqC,iBAAiB,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ,CAAE;MACvDC,IAAI,EAAE9B,eAAe,GAAG,EAAE,GAAG,EAAG,CAAC;MAAA;MACjCmB,MAAM,EAAEA,MAAO;MACfY,MAAM,EAAEd,UAAW;MAAAK,QAAA,EAElBtB,eAAe,iBACZN,OAAA,CAACF,MAAM;QAEHa,QAAQ,EAAEL;MAAgB,GADtB,oBAAoB;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE3B;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EACd;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAErB,CAAC;AAAC7B,EAAA,CAjDID,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAmDlB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}