{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ideapad GAMING\\\\Desktop\\\\SDGP(Project)\\\\src\\\\views\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport redMarkerIcon from './red-marker.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = ['places']; // Required for geolocation\n\nconst MapComponent = ({\n  apiKey\n}) => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  useEffect(() => {\n    const success = position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setCurrentLocation({\n        lat: latitude,\n        lng: longitude\n      });\n    };\n    const error = () => {\n      console.error('Error getting user location');\n    };\n    navigator.geolocation.getCurrentPosition(success, error);\n  }, []);\n  const handleLoad = mapInstance => {\n    setMap(mapInstance);\n  };\n  const center = currentLocation || {\n    lat: 37.7749,\n    lng: -122.4194\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: apiKey // Replace with your API key\n    ,\n    libraries: libraries,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: {\n        width: '100vw',\n        height: '400px'\n      },\n      zoom: 10,\n      center: center,\n      onLoad: handleLoad,\n      children: currentLocation && /*#__PURE__*/_jsxDEV(Marker, {\n        position: currentLocation,\n        icon: {\n          url: redMarkerIcon,\n          scaledSize: new window.google.maps.Size(30, 30) // Adjust size if needed\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(MapComponent, \"5hGfe8aLB8QPuWCDgUwIKDqUxWo=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","redMarkerIcon","jsxDEV","_jsxDEV","libraries","MapComponent","apiKey","_s","map","setMap","currentLocation","setCurrentLocation","success","position","latitude","longitude","coords","lat","lng","error","console","navigator","geolocation","getCurrentPosition","handleLoad","mapInstance","center","googleMapsApiKey","children","mapContainerStyle","width","height","zoom","onLoad","icon","url","scaledSize","window","google","maps","Size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ideapad GAMING/Desktop/SDGP(Project)/src/views/MapComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\nimport redMarkerIcon from './red-marker.svg';\r\nconst libraries = ['places']; // Required for geolocation\r\n\r\nconst MapComponent = ({ apiKey }) => {\r\n    const [map, setMap] = useState(null);\r\n    const [currentLocation, setCurrentLocation] = useState(null);\r\n    \r\n\r\n    \r\n    useEffect(() => {\r\n        const success = (position) => {\r\n            const { latitude, longitude } = position.coords;\r\n            setCurrentLocation({ lat: latitude, lng: longitude });\r\n        };\r\n\r\n        const error = () => {\r\n            console.error('Error getting user location');\r\n        };\r\n\r\n        navigator.geolocation.getCurrentPosition(success, error);\r\n    }, []);\r\n\r\n    const handleLoad = (mapInstance) => {\r\n        setMap(mapInstance);\r\n    };\r\n\r\n    const center = currentLocation || { lat: 37.7749, lng: -122.4194 }; \r\n\r\n    return (\r\n        <LoadScript\r\n            googleMapsApiKey={ apiKey } // Replace with your API key\r\n            libraries={libraries}\r\n        >\r\n            <GoogleMap\r\n                mapContainerStyle={{ width: '100vw', height: '400px' }}\r\n                zoom={10}\r\n                center={center}\r\n                onLoad={handleLoad}\r\n            >\r\n                {currentLocation && (\r\n                    <Marker position={currentLocation} \r\n                    icon={{\r\n                        url: redMarkerIcon,\r\n                        scaledSize: new window.google.maps.Size(30, 30), // Adjust size if needed\r\n                    }}\r\n                    />\r\n                )}\r\n            </GoogleMap>\r\n        </LoadScript>\r\n    );\r\n};\r\n\r\n\r\nexport default MapComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AACtE,OAAOC,aAAa,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7C,MAAMC,SAAS,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;;AAE9B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAI5DC,SAAS,CAAC,MAAM;IACZ,MAAMe,OAAO,GAAIC,QAAQ,IAAK;MAC1B,MAAM;QAAEC,QAAQ;QAAEC;MAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;MAC/CL,kBAAkB,CAAC;QAAEM,GAAG,EAAEH,QAAQ;QAAEI,GAAG,EAAEH;MAAU,CAAC,CAAC;IACzD,CAAC;IAED,MAAMI,KAAK,GAAGA,CAAA,KAAM;MAChBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAC;IAChD,CAAC;IAEDE,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACX,OAAO,EAAEO,KAAK,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,UAAU,GAAIC,WAAW,IAAK;IAChChB,MAAM,CAACgB,WAAW,CAAC;EACvB,CAAC;EAED,MAAMC,MAAM,GAAGhB,eAAe,IAAI;IAAEO,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE,CAAC;EAAS,CAAC;EAElE,oBACIf,OAAA,CAACJ,UAAU;IACP4B,gBAAgB,EAAGrB,MAAQ,CAAC;IAAA;IAC5BF,SAAS,EAAEA,SAAU;IAAAwB,QAAA,eAErBzB,OAAA,CAACL,SAAS;MACN+B,iBAAiB,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ,CAAE;MACvDC,IAAI,EAAE,EAAG;MACTN,MAAM,EAAEA,MAAO;MACfO,MAAM,EAAET,UAAW;MAAAI,QAAA,EAElBlB,eAAe,iBACZP,OAAA,CAACH,MAAM;QAACa,QAAQ,EAAEH,eAAgB;QAClCwB,IAAI,EAAE;UACFC,GAAG,EAAElC,aAAa;UAClBmC,UAAU,EAAE,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAE;QACrD;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAErB,CAAC;AAACrC,EAAA,CA/CIF,YAAY;AAAAwC,EAAA,GAAZxC,YAAY;AAkDlB,eAAeA,YAAY;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}